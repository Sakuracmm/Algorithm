1. 动态规划四要素：
    - 灵感，创造力，存储小规模问题的结果
        - 最优解/Maximum/Minimum
        - Yes/No
        - Count(*)
    - 方程 Function
        - 状态之间的联系，怎么通过小的状态，来求得大的状态
    - 初始化 Initialization
        - 最极限的小状态是什么，起点
    - 答案 Answer
        - 最大的那个状态是什么，终点

2. 滚动数组的优化
    f[i] = max(f[i - 1], f[i - 2] + A[i]);
    --->>>
    f[i % 2] = max(f[(i - 1) % 2] 和 f[(i - 2) % 2])

    这类题目特点f[i][j] = 由f[i - 1]行来决定，第i行跟i - 1行之前毫无关系，所以状态转变为非f[i % 2][j] = 由f[(i -1) % 2]来决定状态

3. 小技巧
    网格类的题目正方形用右下角作为定位角
    长方形可以用左上角和右下角作为定位角

记忆化搜索：
本质：动态规划
动态规划就是解决了重复计算的搜索
动态规划的实现方式：
    -循环（从小到大递推）
    -记忆化搜索（从大到小搜索）
        - 画搜索树
        - 万金油
多重循环DP遇到的困难：
    -从上到下循环不能解决问题
    -初始状态找不到
    -有搜索，从大的往小的搜索

博弈类DP
    -博弈有先后手
        -State
            -定义一个人的状态
        -Function
            -考虑两个人的状态做状态更新
        -Intialize
        -Answer

     -先考虑最小状态
     然后思考大的状态 -> 往小的状态递推，非常适合记忆化搜索